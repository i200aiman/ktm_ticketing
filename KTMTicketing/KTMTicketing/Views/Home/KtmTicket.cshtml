@model KTMTicketing.Models.CustomerResponse

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>KtmTicket</title>
    <link href="~/Content/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" />
    <link href="~/Content/vendor/magnific-popup/magnific-popup.css" rel="stylesheet" />
    <link href="~/Content/css/creative.min.css" rel="stylesheet" />
    <link href='https://fonts.googleapis.com/css?family=Poppins' rel='stylesheet'>
    <link href="~/Content/KTMStyle.css" rel="stylesheet" />
</head>
<body>
    <!--<div class="table-responsive">
        <table class="table table-striped table-dark">
            <thead>
                <tr>
                    <th scope="col">Stesen</th>
                    @for (int col = 0; col < ViewBag.Rate.GetLength(1); col++)
                    {
                        <th scope="col">@ViewBag.DictLane[col]</th>
                    }
                </tr>
            </thead>
            @for (int row = 0; row < ViewBag.Rate.GetLength(0); row++)
            {
                <tr>
                    <th scope="row">@ViewBag.DictLane[row]</th>
                    @for (int col = 0; col < ViewBag.Rate.GetLength(1); col++)
                    {
                        <th scope="row" align="center">
                            @ViewBag.Rate[row, col].ToString("0.00")
                        </th>
                    }
                </tr>
            }
        </table>
    </div> -->
    <div style="padding:50px">
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary()
            <div>
                <div class="col-12" style="padding-bottom:30px">
                    Origin :
                    @Html.DropDownListFor(x => x.Destination.OriginLoc,
                // This argument needs some explanation - here we take a Distionary<string, string>
                // and turn it into an instance of SelectList, see blog post for more details
                      new SelectList(ViewBag.DictLane, "Key", "Value"),

                      // Text for the first 'default' option
                      "- Please select your origin -",

                      // A class name to put on the "<select>"
                      new { @class = "form-control" })
                </div>
                <div class="col-12" style="padding-bottom:30px">
                    Destination :
                    @Html.DropDownListFor(x => x.Destination.DestiLoc,
                // This argument needs some explanation - here we take a Distionary<string, string>
                // and turn it into an instance of SelectList, see blog post for more details
                        new SelectList(ViewBag.DictLane, "Key", "Value"),

                      // Text for the first 'default' option
                      "- Please select your destination -",

                      // A class name to put on the "<select>"
                      new { @class = "form-control" })
                </div>
                <div class="col-12" style="padding-bottom:30px">
                    Trip :<br />

                    @Html.RadioButtonFor(x => x.Destination.WayLoc, 0, htmlAttributes: new
                {
                    @checked = "checked"
                })
                    Return&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                    @Html.RadioButtonFor(x => x.Destination.WayLoc, 1, htmlAttributes: new
               {
               })
                    One Way

                </div>
                <div class="col-12" style="padding-bottom:30px">
                    Type :<br />

                    @Html.RadioButtonFor(x => x.Destination.Citizen, 0, htmlAttributes: new
                {
                    @checked = "checked"
                })
                    Normal Citizen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                    @Html.RadioButtonFor(x => x.Destination.Citizen, 1, htmlAttributes: new
               {
               })
                    Senior Citizen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                    @Html.RadioButtonFor(x => x.Destination.Citizen, 2, htmlAttributes: new
                {
                })
                    Disabled&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                    @Html.RadioButtonFor(x => x.Destination.Citizen, 3, htmlAttributes: new
               {
               })
                    Student

                </div>
                <div class="col-12" style="padding-bottom:30px">
                    Quantity :
                    @Html.TextBoxFor(x => x.Destination.Quantity, new { @type = "number", @min = "0"})
                </div>
                <input type="submit" value="Confirm" class="btn btn-primary btn-lg" />
            </div>
        }
    </div>
    <script src="~/Content/vendor/jquery/jquery.min.js"></script>
    <script src="~/Content/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/Content/vendor/jquery-easing/jquery.easing.min.js"></script>
    <script src="~/Content/js/creative.min.js"></script>
</body>
</html>
